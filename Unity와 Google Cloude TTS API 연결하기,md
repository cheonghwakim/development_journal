PART 1. API KEY 발급

1. 시작

- 새 프로젝트 생성


​

- 프로젝트 이름 적고 만들기


​

- API 및 서비스 사용 설정 클릭


​

- Cloud Text-to-Speech API 검색


​

- 사용 클릭


​

- 사용자 인증정보 만들기 클릭


​

- 서비스 계정 클릭


​

- 서비스 계정 만들기 클릭


- 서비스 계정 이름 적고 만들기


​

- 설치 가이드 대로 역할은 선택하지 않는다. '계속' 클릭



​

- 키 생성을 위해 키 관리 -> 새 키 만들기



​

- JSON 선택 후 만들기


​

- 적당한 곳에 JSON파일을 넣고, 해당 경로를 환경변수에 GOOGLE_APPLICATION_CREDENTIALS 라는 이름으로 추가.

(가이드 대로라면 CMD에서 set GOOGLE_APPLICATION_CREDENTIALS=[PATH] 하는건데, 현재 셀 세션에만 적용되므로 새 세션을 열 경우 변수를 다시 설정해야 한다.) 나는 CMD에서 하지 않고 환경변수에 추가했다. 


(나같은 경우는 C:\SSAFY\Google-Cloud\TTS\TTS Project-006f523f70ca.json)


​

2. Cloud SDK 설치

이 부분은 아래 링크를 그대로 따라하는걸 추천한다.

https://cloud.google.com/sdk/docs/install?hl=ko


Google Cloud SDK 설치  |  Cloud SDK 문서
홈 Cloud SDK: 명령줄 인터페이스 문서 평가 및 리뷰 Google Cloud SDK 설치 목차 설치 안내 선택사항: 최신 Google Cloud 클라이언트 라이브러리 설치 기타 설치 옵션 제품 구성 설치 관리 이 페이지에는 Cloud SDK 설치를 선택하고 유지하기 위한 안내가 포함되어 있습니다. 설치 안내 Linux Debian/Ubuntu Red Hat/Fedora/CentOS macOS Windows Cloud SDK에는 Python이 필요합니다. 지원되는 버전은 Python 3(권장, 3.5~3.8) 및 Python ...

cloud.google.com

어떤 글에선 Cloud SDK 설치 프로그램을 다운받는게 아니라 ZIP파일을 다운받아서 압축 해제한다음 사용하는 방법이 있었는데, 이 방법은 나에게 맞지 않았고 그냥 .EXE 실행이 잘 먹혔다.

설치는 그냥 따로 체크하거나 체크해제할건 없었고 그냥 Next->를 눌렀다.

설치가 끝나면 Google Cloud SDK 셸이 시작 -> gcloud init 입력 -> Y입력 -> 구글액세스 허용 선택 -> 프로젝트 번호 선택(나는 1번) 까지 한다.


 

3. API KEY 생성

- 다시 구글 클라우드 플랫폼으로 돌아가 아래 창에서 API키 발급을 선택한다.


​

- 발급된 키를 프로젝트에 사용한다!


​

​

<참고한 것>

설치 가이드

https://cloud.google.com/text-to-speech/docs/quickstart-protocol?hl=ko

설치에 참고한 블로그

https://webnautes.tistory.com/1247

​

PART 2. Unity에 TTS 구현

​

코드

https://kumgo1d.tistory.com/28


[Unity] REST API를 활용하여 Google Text to Speech 사용하기
안녕하세요 골드입니다. 오늘은 Unity에서 Google Text To Speech를 사용하는 방법에 대해서 글을 쓰도록 하겠습니다. Google에서 공식적으로 Unity에서 사용할 수 있도록 Text To Speech를 지원하고 있지는 않습..

kumgo1d.tistory.com

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
//이 둘을 선언해야 JsonUtility, HttpWebRequest, StreamReader 등을 사용할 수 있다.
using System.IO;
using System.Net;
//어쩌다 추가했는지 기억이 안남..
using System.Text;

public class TTSScript : MonoBehaviour
{
    private string apiURL = "https://texttospeech.googleapis.com/v1beta1/text:synthesize?key=키 입력";
    SetTextToSpeech tts = new SetTextToSpeech();

    // Start is called before the first frame update
    private void Start()
    {
        Init();
        CreateAudio();   
    }

    void Init(){
        SetInput si = new SetInput();
        si.text = "안녕하세요";
        tts.input = si;

        SetVoice sv = new SetVoice();
        sv.languageCode = "ko-KR";
        sv.name = "ko-KR-Wavenet-A";
        sv.ssmlGender = "FEMALE";
        tts.voice = sv;

        SetAudioConfig sa = new SetAudioConfig();
        sa.audioEncoding = "LINEAR16";
        sa.speakingRate = 0.8f;
        sa.pitch = 0;
        sa.volumeGainDb = 0;
        tts.audioConfig = sa;
    }
    // Update is called once per frame
    void Update()
    {
        
    }

    //string값을 byte array -> float array로 변환
    private void CreateAudio(){
        //HttpWebRequest요청후 반환된 string값을 저장
        var str = TextToSpeechPost(tts);

        //string값을 JsonUtility를 사용하여 JSON데이터 형식으로 다시 저장
        GetContent info = JsonUtility.FromJson<GetContent>(str);

        //JSON 형식으로 저장된 값을 byte array로 변환
        var bytes = Convert.FromBase64String(info.audioContent);

        //byte array를 float array로 변환
        var f = ConvertByteToFloat(bytes);

        //create audio clip
        AudioClip audioClip = AudioClip.Create("audioContent",f.Length,1,44100,false);
        audioClip.SetData(f,0);

        AudioSource audioSource = FindObjectOfType<AudioSource>();

        audioSource.PlayOneShot(audioClip, 0.7F);//0.7F제발 추가해;
    }

    private static float[] ConvertByteToFloat(byte[] array){
        float[] floatArr = new float[array.Length/2];

        for(int i=0;i<floatArr.Length;i++){
            floatArr[i]=BitConverter.ToInt16(array,i*2)/32768.0f;
        }
        return floatArr;
    }

    //POST방식으로 웹과 소통하기 위한 메소드
    public string TextToSpeechPost(object data){
        //JsonUtility 사용.. string을 요청 보내기 위한 byte[]로 변환
        string str = JsonUtility.ToJson(data);
        var bytes = System.Text.Encoding.UTF8.GetBytes(str);

        //요청을 보낼 주소와 세팅
        
        HttpWebRequest request = (HttpWebRequest)WebRequest.Create(apiURL);
       
        request.Method = "POST";
        request.ContentType = "application/json";
        request.ContentLength = bytes.Length;

        //Stream 형식으로 데이터를 보냄 request
        try{
            using(var stream = request.GetRequestStream()){
                stream.Write(bytes,0,bytes.Length);
                stream.Flush();
                stream.Close();
            }
           
            
            //여기서부터 안됨
            //요청 데이터에 대한 응답 데이터를 StreamReader로 받음
            HttpWebResponse response = (HttpWebResponse)request.GetResponse();
            //StreamReader로 stream데이터를 읽음
            StreamReader reader = new StreamReader(response.GetResponseStream());
            //stream데이터를 string으로 변환
            string json = reader.ReadToEnd();
            return json;
        }
        catch(WebException e){
            //log
            return null;
        }
    }
}



[System.Serializable]
public class SetTextToSpeech{
    public SetInput input;
    public SetVoice voice;
    public SetAudioConfig audioConfig;
}
[System.Serializable]
public class SetInput{
    public string text;
    //public string ssml;
}
[System.Serializable]
public class SetVoice{
    public string languageCode;
    public string name;
    public string ssmlGender;
}
[System.Serializable]
public class SetAudioConfig{
    public string audioEncoding;
    public float speakingRate;
    public int pitch;
    public int volumeGainDb;
    //public int sampleRateHertz;
}
[System.Serializable]
public class GetContent{
    public string audioContent;
}
.

.

오브젝트에(나같은 경우는 정육면체 Cube) add Component로 Audio Source 추가한다.


그리고 MainCamera엔 AudioListener를 추가


​

여기까지 하니 FindObjectOfType 가 더이상 null을 반환하지는 않고 오류도 없는데 소리가 안나와서

AudioSource.PlayOneShot 문서를 참고하니 볼륨 조절 변수가 있길래 넣어보니 잘 나온다!! 

audioSource.PlayOneShot(audioClip, 0.7F);//0.7F제발 추가해
​

​

​

유니티 문서를 잘 참고하자

https://docs.unity3d.com/ScriptReference/AudioSource.PlayOneShot.html


Unity - Scripting API: AudioSource.PlayOneShot
AudioSource .PlayOneShot Leave feedback Switch to Manual public void PlayOneShot ( AudioClip clip , float volumeScale = 1.0F); Parameters clip The clip being played. volumeScale The scale of the volume (0-1). Description Plays an AudioClip , and scales the AudioSource volume by volumeScale. AudioSou...

docs.unity3d.com

​

​

​

​

​

​

+목소리 종류

https://cloud.google.com/text-to-speech/docs/voices?hl=ko

ko-KR-Wavenet-A가 제일 나음
[출처] Unity와 Google Cloude TTS API 연결하기|작성자 evanmacmillan
